<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.20 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<rfc ipr="trust200902" docName="draft-iab-privsec-confidentiality-mitigations-00" category="info">

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

  <front>
    <title abbrev="privsec-mitigations">Confidentiality in the Face of Pervasive Surveillance</title>

    <author initials="T." surname="Hardie" fullname="Ted Hardie" role="editor">
      <organization></organization>
      <address>
        <email>ted.ietf@gmail.com</email>
      </address>
    </author>

    <date year="2015" month="May" day="19"/>

    <area>General</area>
    <workgroup>IAB</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>The IAB has published <xref target="I-D.iab-privsec-confidentiality-threat"/> in
response to several revelations of pervasive attack on Internet
communications.  In this document we survey the mitigations to those
threats which are currently available or which might plausibly be
deployed.  We discuss these primarily in the context of Internet
protocol design, focusing on robustness to pervasive monitoring and
avoidance of unwanted cross-mitigation impacts.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">

<t>To ensure that the Internet can be trusted by users, it is necessary
for the Internet technical community to address the vulnerabilities
exploited in the attacks document in <xref target="RFC7258"/> and the threats
described in <xref target="I-D.iab-privsec-confidentiality-threat"/>.  The goal of
this document is to describe more precisely the mitigations available
for those threats and to lay out the interactions among them should
they be deployed in combination.</t>

</section>
<section anchor="responses" title="Available Mitigations">

<t>Given the threat model laid out in
<xref target="I-D.iab-privsec-confidentiality-threat"/>., how should the Internet
technical community respond to pervasive attack?  The cost and risk
considerations discussed in it provide a guide to responses.  Namely,
responses to passive attack should close off avenues for those attacks that
are safe, scalable, and cheap, forcing the attacker to mount attacks
that expose it to higher cost and risk.  Protocols and security measures
protecting against active attacks must also limit the impact of 
compromise and malfeasance by avoiding systems which grant universal
credentials. </t>

<t>In this section, we discuss a collection of high-level approaches to
mitigating pervasive attacks.  These approaches are not meant to be
exhaustive, but rather to provide general guidance to protocol
designers in creating protocols that are resistant to pervasive
attack.</t>

<figure title="Table of Mitigations" anchor="figops"><artwork><![CDATA[
   +--------------------------+----------------------------------------+
   | Attack Class             | High-level mitigations                 |
   +--------------------------+----------------------------------------+
   | Passive observation      | Encryption for confidentiality         |
   |                          |                                        |
   | Passive inference        | Path differentiation                   |
   |                          |                                        |
   | Active                   | Authentication, monitoring             |
   |                          |                                        |
   | Metadata Analysis        | Data Minimiaztion                      |
   |                          |                                        |
   | Static key exfiltration  | Encryption with per-session state      |
   |                          | (PFS)                                  |
   |                          |                                        |
   | Dynamic key exfiltration | Transparency, validation of end        |
   |                          | systems                                |
   |                          |                                        |
   | Content exfiltration     | Object encryption, distributed systems |
   +--------------------------+----------------------------------------+
]]></artwork></figure>

<t>The traditional mitigation to passive attack is to render content
unintelligible to the attacker by applying encryption, for example, by
using TLS or IPsec <xref target="RFC5246"/><xref target="RFC4301"/>.  Even without authentication,
encryption will prevent a passive attacker from being able to read the
encrypted content.  Exploiting unauthenticated encryption requires an
active attack (man in the middle); with authentication, a key
exfiltration attack is required.</t>

<t>The additional capabilities of a pervasive passive attacker, however,
require some changes in how protocol designers evaluate what
information is encrypted.  In addition to directly collecting
unencrypted data, a pervasive passive attacker can also make
inferences about the content of encrypted messages based on what is
observable.  For example, if a user typically visits a particular set
of web sites, then a pervasive passive attacker observing all of the
user’s behavior can track the user based on the hosts the user
communicates with, even if the user changes IP addresses, and even if
all of the connections are encrypted.</t>

<t>Thus, in designing protocols to be resistant to pervasive passive
attacks, protocol designers should consider what information is left
unencrypted in the protocol, and how that information might be
correlated with other traffic.  Some of the data left unencrypted may be 
considered “metadata” within the context of a single protocol, as it 
provides adjunct information used for delivery or display, rather than the 
data directly created or consumed by protocol users.  This does not mean
it is not useful to attackers, however, and when this metadata is not 
protected by encryption it may leak substantial amounts of information.
Data minimization  strategies should thus be applied to any data left 
unencrypted, whether it be payload or metadata.  Information that cannot 
be encrypted or omited should be be dissociated from other
information.  For example, the Tor overlay routing network anonymizes
IP addresses of by using multi-hop onion routing.</t>

<t>As with traditional, limited active attacks, the basic mitigation to
pervasive active attack is to enable the endpoints of a communication
to authenticate each other.  However, attackers that can mount
pervasive active attacks can often subvert the authorities on which
authentication systems rely.  Thus, in order to make authentication
systems more resilient to pervasive attack, it is beneficial to
monitor these authorities to detect misbehavior that could enable
active attack.  For example, DANE and Certificate Transparency both
provide mechanisms for detecting when a CA has issued a certificate
for a domain name without the authorization of the holder of that
domain name <xref target="RFC6962"/><xref target="RFC6698"/>.</t>

<t>While encryption and authentication protect the security of individual
sessions, these sessions may still leak information, such as IP
addresses or server names, that a pervasive attacker can use to
correlate sessions and derive additional information about the target.
Thus, pervasive attack highlights the need for anonymization
technologies, which make correlation more difficult.  Typical
approaches to anonymization against traffic analysis include:</t>

<t>o Aggregation: Routing sessions for many endpoints through a common
 mid-point (e.g, an HTTP proxy).  The midpoint appears as
 the origin of the communication when traffic analysis is conducted
 from points after it, so individual sources cannot be distinguished.
 If traffic analysis is being conducted prior to the mid-point, all
 flows appear to be destined to the same point, which leaks very little
 information.  Even when traffic analysis is being performed both
 before and after the mid-point, simultaneous connections may make it 
 difficult to corelate the traffic going into and out of the mid-point.
 For this to be effective as a mitigation, traffic to the mid-point must
 be encrypted and traffic from the mid-point should be.</t>

<t>o Onion routing: Routing a session through several mid-points, rather
than directly end-to-end, with encryption that guarantees that each
node can only see the previous and next hops.  This ensures that
the source and destination of a communication are never revealed
simultaneously.</t>

<t>o Multi-path: Routing different sessions via different paths (even if
 they originate from the same endpoint).  This reduces the probability
 that the same attacker will be able to collect many sessions or associate
 them with the same individual.  If, for example, a device has both a
 cellular and 802.11 interface, routing some traffic across the cellular
 network and other traffic over the 802.11 interface means that traffic 
 analysis conducted only with one network will be incomplete.  Even if 
 conducted in both, it may be more difficult for the attacker to associate
 the traffic in each network with the other.  For this to be effective
 as a mitigation, signalling protocols which gather and transmit data
 about multiple interfaces (such as SIP) must be encrypted to avoid the
 information being used in cross-corelation.</t>

<t>An encrypted, authenticated session is safe from content-monitoring
attacks in which neither end collaborates with the attacker, but can
still be subverted by the endpoints.  The most common ciphersuites
used for HTTPS today, for example, are based on using RSA encryption
in such a way that if an attacker has the private key, the attacker
can derive the session keys from passive observation of a session.
These ciphersuites are thus vulnerable to a static key exfiltration
attack - if the attacker obtains the server’s private key once, then
they can decrypt all past and future sessions for that server.</t>

<t>Static key exfiltration attacks are prevented by including ephemeral,
per-session secret information in the keys used for a session.  Most
IETF security protocols include modes of operation that have this
property.  These modes are known in the literature under the heading
“perfect forward secrecy” (PFS) because even if an adversary has all
of the secrets for one session, the next session will use new,
different secrets and the attacker will not be able to decrypt it.
The Internet Key Exchange (IKE) protocol used by IPsec supports PFS by
default <xref target="RFC4306"/>, and TLS supports PFS via the use of specific
ciphersuites <xref target="RFC5246"/>.</t>

<t>Dynamic key exfiltration cannot be prevent by protocol means.  By
definition, any secrets that are used in the protocol will be
transmitted to the attacker and used to decrypt what the protocol
encrypts.  Likewise, no technical means will stop a willing
collaborator from sharing keys with an attacker.  However, this attack
model also covers “unwitting collaborators”, whose technical resources
are collaborating with the attacker without their owners’ knowledge.
This could happen, for example, if flaws are built into products or if
malware is injected later on.</t>

<t>Standards can also define protocols that provide greater or lesser
 opportunity for dynamic key exfiltration.  Collaborators engaging in
 key exfiltration through a standard protocol will need to use covert
 channels in the protocol to leak information that can be used by the
 attacker to recover the key.  Such use of covert channels has been
 demonstrated for SSL, TLS, and SSH.  Any protocol bits
 that can be freely set by the collaborator can be used as a covert
 channel, including, for example, TCP options or unencrypted traffic
 sent before a STARTTLS message in SMTP or XMPP.  Protocol designers
 should consider what covert channels their protocols expose, and how
 those channels can be exploited to exfiltrate key information.</t>

<t>Content exfiltration has some similarity to the dynamic exfiltration
case, in that nothing can prevent a collaborator from revealing what
they know, and the mitigations against becoming an unwitting
collaborator apply.  In this case, however, applications can limit
what the collaborator is able to reveal.  For example, the S/MIME and
PGP systems for secure email both deny intermediate servers access to
certain parts of the message <xref target="RFC5750"/><xref target="RFC2015"/>.  Even if a server
were to provide an attacker with full access, the attacker would still
not be able to read the protected parts of the message.</t>

<t>Mechanisms like S/MIME and PGP are often referred to as
“end-to-end”security mechanisms, as opposed to “hop-by-hop” or
“end-to-middle” mechanisms like the use of SMTP over TLS.  These two
different mechanisms address different types of attackers: Hop-by-hop
mechanisms protect from attackers on the wire (passive or active),
while end-to-end mechansims protect against attackers within
intermediate nodes.  Thus, neither of these mechanisms provides
complete protection by itself.  For example:</t>

<t>o Two users messaging via Facebook over HTTPS are protected against
passive and active attackers in the network between the users and
Facebook.  However, if Facebook is a collaborator in an exfiltration
attack, their communications can still be monitored.  They would need
to encrypt their messages end-to-end in order to protect themselves
against this risk.</t>

<t>o Two users exchanging PGP-protected email have protected the content
of their exchange from network attackers and intermediate servers, but
the header information (e. g., To and From addresses) is
unnecessarily exposed to passive and active attackers that can see
communications among the mail agents handling the email messages.
These mail agents need to use hop-by-hop encryption and traffic
analysis mitigation to address this risk.</t>

<t>Mechanisms such as S/MIME and PGP are also known as “object-based”
security mechanisms (as opposed to “communications security”
mechanisms), since they operate at the level of objects, rather than
communications sessions.  Such secure object can be safely handled by
intermediaries in order to realize, for example, store and forward
messaging.  In the examples above, the encrypted instant messages or
email messages would be the secure objects.</t>

<t>The mitigations to the content exfiltration case regard participants
in the protocol as potential passive attackers themselves, and apply
the mitigations discussed above with regard to passive attack.
Information that is not necessary for these participants to fulfill
their role in the protocol can be encrypted, and other information can
be anonymized.</t>

<t>In summary, many of the basic tools for mitigating pervasive attack
already exist.  As Edward Snowden put it, “properly implemented strong
crypto systems are one of the few things you can rely on”.
The task for the Internet community is to ensure that applications are
able to use the strong crypto systems we have defined - for example,
TLS with PFS ciphersuites - and that these properly implemented.
(And, one might add, turned on!) Some of this work will require
architectural changes to applications, e. g., in order to limit the
information that is exposed to servers.  In many other cases, however,
the need is simply to make the best use we can of the cryptographic
tools we have.</t>

</section>
<section anchor="interplay-among-mitigations" title="Interplay among Mitigations">

<t>One of the key considerations in selecting mitigations is how to 
manage the interplay among different mechanisms.  Care must be taken
to avoid situations where a mitigation is rendered fruitless because 
of a different mitigation is working at a different time scale or
with a different aim.  As an example, there is work in progress in 
IEEE 802 to organize the “randomization” of MAC Addresses, 
ensuring that the address varies as the device
connects to different networks, or connects at different times. In
theory, the randomization will mitigate the tracking by MAC
address. However, the randomization will be defeated if the adversary
can link the randomized MAC address to other identifiers such as the 
interface identifier in IPv6 addresses, the unique
identifiers used in DHCP or DHCPv6, or unique identifiers used in
various link-local discovery protocols.  The need to consider the
interplay among responses is a general one, and this section will 
examine some common interactions.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This memo makes no request of IANA.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>This memorandum describes a series of mitigations to the
attacks described in <xref target="RFC7258"/>.  No such list could possibly
be comprehensive, nor is the attack therein described the 
only possible attack.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='RFC2119'>

<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass. Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date year='1997' month='March' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:

<list>
<t>
      The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in
      RFC 2119.
</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>

<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='http://www.rfc-editor.org/rfc/rfc2119.txt' />
<format type='HTML' octets='17970' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5777' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>



<reference anchor='RFC7258'>

<front>
<title>Pervasive Monitoring Is an Attack</title>
<author initials='S.' surname='Farrell' fullname='S. Farrell'>
<organization /></author>
<author initials='H.' surname='Tschofenig' fullname='H. Tschofenig'>
<organization /></author>
<date year='2014' month='May' />
<abstract>
<t>Pervasive monitoring is a technical attack that should be mitigated in the design of IETF protocols, where possible.</t></abstract></front>

<seriesInfo name='BCP' value='188' />
<seriesInfo name='RFC' value='7258' />
<format type='TXT' octets='13396' target='http://www.rfc-editor.org/rfc/rfc7258.txt' />
</reference>



<reference anchor='I-D.iab-privsec-confidentiality-threat'>
<front>
<title>Confidentiality in the Face of Pervasive Surveillance: A Threat Model and Problem Statement</title>

<author initials='R' surname='Barnes' fullname='Richard Barnes'>
    <organization />
</author>

<author initials='B' surname='Schneier' fullname='Bruce Schneier'>
    <organization />
</author>

<author initials='C' surname='Jennings' fullname='Cullen Jennings'>
    <organization />
</author>

<author initials='T' surname='Hardie' fullname='Ted Hardie'>
    <organization />
</author>

<author initials='B' surname='Trammell' fullname='Brian Trammell'>
    <organization />
</author>

<author initials='C' surname='Huitema' fullname='Christian Huitema'>
    <organization />
</author>

<author initials='D' surname='Borkmann' fullname='Daniel Borkmann'>
    <organization />
</author>

<date month='May' day='11' year='2015' />

<abstract><t>Since the initial revelations of pervasive surveillance in 2013, several classes of attacks on Internet communications have been discovered.  In this document we develop a threat model that describes these attacks on Internet confidentiality.  We assume an attacker that is interested in undetected, indiscriminate eavesdropping.  The threat model is based on published, verified attacks.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-iab-privsec-confidentiality-threat-06' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-iab-privsec-confidentiality-threat-06.txt' />
</reference>




    </references>

    <references title='Informative References'>





<reference anchor='RFC4301'>

<front>
<title>Security Architecture for the Internet Protocol</title>
<author initials='S.' surname='Kent' fullname='S. Kent'>
<organization /></author>
<author initials='K.' surname='Seo' fullname='K. Seo'>
<organization /></author>
<date year='2005' month='December' />
<abstract>
<t>This document describes an updated version of the "Security Architecture for IP", which is designed to provide security services for traffic at the IP layer.  This document obsoletes RFC 2401 (November 1998). [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='4301' />
<format type='TXT' octets='262123' target='http://www.rfc-editor.org/rfc/rfc4301.txt' />
</reference>



<reference anchor='RFC6962'>

<front>
<title>Certificate Transparency</title>
<author initials='B.' surname='Laurie' fullname='B. Laurie'>
<organization /></author>
<author initials='A.' surname='Langley' fullname='A. Langley'>
<organization /></author>
<author initials='E.' surname='Kasper' fullname='E. Kasper'>
<organization /></author>
<date year='2013' month='June' />
<abstract>
<t>This document describes an experimental protocol for publicly logging the existence of Transport Layer Security (TLS) certificates as they are issued or observed, in a manner that allows anyone to audit certificate authority (CA) activity and notice the issuance of suspect certificates as well as to audit the certificate logs themselves. The intent is that eventually clients would refuse to honor certificates that do not appear in a log, effectively forcing CAs to add all issued certificates to the logs.&lt;/t>&lt;t> Logs are network services that implement the protocol operations for submissions and queries that are defined in this document.</t></abstract></front>

<seriesInfo name='RFC' value='6962' />
<format type='TXT' octets='55048' target='http://www.rfc-editor.org/rfc/rfc6962.txt' />
</reference>



<reference anchor='RFC5750'>

<front>
<title>Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.2 Certificate Handling</title>
<author initials='B.' surname='Ramsdell' fullname='B. Ramsdell'>
<organization /></author>
<author initials='S.' surname='Turner' fullname='S. Turner'>
<organization /></author>
<date year='2010' month='January' />
<abstract>
<t>This document specifies conventions for X.509 certificate usage by Secure/Multipurpose Internet Mail Extensions (S/MIME) v3.2 agents.  S/MIME provides a method to send and receive secure MIME messages, and certificates are an integral part of S/MIME agent processing.  S/MIME agents validate certificates as described in RFC 5280, the Internet X.509 Public Key Infrastructure Certificate and CRL Profile.  S/MIME agents must meet the certificate processing requirements in this document as well as those in RFC 5280.  This document obsoletes RFC 3850. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='5750' />
<format type='TXT' octets='48716' target='http://www.rfc-editor.org/rfc/rfc5750.txt' />
</reference>



<reference anchor='RFC6698'>

<front>
<title>The DNS-Based Authentication of Named Entities (DANE) Transport Layer Security (TLS) Protocol: TLSA</title>
<author initials='P.' surname='Hoffman' fullname='P. Hoffman'>
<organization /></author>
<author initials='J.' surname='Schlyter' fullname='J. Schlyter'>
<organization /></author>
<date year='2012' month='August' />
<abstract>
<t>Encrypted communication on the Internet often uses Transport Layer Security (TLS), which depends on third parties to certify the keys used.  This document improves on that situation by enabling the administrators of domain names to specify the keys used in that domain's TLS servers.  This requires matching improvements in TLS client software, but no change in TLS server software. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='6698' />
<format type='TXT' octets='84034' target='http://www.rfc-editor.org/rfc/rfc6698.txt' />
</reference>



<reference anchor='RFC4306'>

<front>
<title>Internet Key Exchange (IKEv2) Protocol</title>
<author initials='C.' surname='Kaufman' fullname='C. Kaufman'>
<organization /></author>
<date year='2005' month='December' />
<abstract>
<t>This document describes version 2 of the Internet Key Exchange (IKE) protocol. IKE is a component of IPsec used for performing mutual authentication and establishing and maintaining security associations (SAs).&lt;/t>&lt;t> This version of the IKE specification combines the contents of what were previously separate documents, including Internet Security Association and Key Management Protocol (ISAKMP, RFC 2408), IKE (RFC 2409), the Internet Domain of Interpretation (DOI, RFC 2407), Network Address Translation (NAT) Traversal, Legacy authentication, and remote address acquisition.&lt;/t>&lt;t> Version 2 of IKE does not interoperate with version 1, but it has enough of the header format in common that both versions can unambiguously run over the same UDP port. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='4306' />
<format type='TXT' octets='250941' target='http://www.rfc-editor.org/rfc/rfc4306.txt' />
</reference>



<reference anchor='RFC5246'>

<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'>
<organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'>
<organization /></author>
<date year='2008' month='August' />
<abstract>
<t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='5246' />
<format type='TXT' octets='222395' target='http://www.rfc-editor.org/rfc/rfc5246.txt' />
</reference>



<reference anchor='RFC2015'>

<front>
<title abbrev='MIME Security with PGP'>MIME Security with Pretty Good Privacy (PGP)</title>
<author initials='M.' surname='Elkins' fullname='Michael Elkins'>
<organization>P.O. Box 92957 - M1/102</organization>
<address>
<postal>
<street>Los Angeles</street>
<street>CA 90009-2957</street></postal>
<phone>+1 310 336 8040</phone>
<facsimile>+1 310 336 4402</facsimile></address></author>
<date year='1996' month='October' />
<area>Security</area>
<area>Applications</area>
<keyword>authentication</keyword>
<keyword>content-type</keyword>
<keyword>multipurpose internet mail extensions</keyword>
<keyword>pretty good privacy</keyword>
<keyword>security</keyword>
<abstract>
<t>
   This document describes how Pretty Good Privacy (PGP) can be used to
   provide privacy and authentication using the Multipurpose Internet
   Mail Extensions (MIME) security content types described in RFC1847.
</t></abstract></front>

<seriesInfo name='RFC' value='2015' />
<format type='TXT' octets='14223' target='http://www.rfc-editor.org/rfc/rfc2015.txt' />
<format type='XML' octets='16990' target='http://xml.resource.org/public/rfc/xml/rfc2015.xml' />
</reference>


<reference anchor="STRINT" target="https://www.w3.org/2014/strint/draft-iab-strint-report.html">
  <front>
    <title>Strint Workshop Report</title>
    <author initials="." surname="S Farrell" fullname="Stephen Farrell">
      <organization></organization>
    </author>
    <date year="2014" month="April" day="06"/>
  </front>
</reference>


    </references>




  </back>
</rfc>

